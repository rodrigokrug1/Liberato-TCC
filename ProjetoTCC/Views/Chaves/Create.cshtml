@model ProjetoTCC.Chaves

@{
    ViewBag.Title = "Create";
}

<h2>Criar nova chave</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb bg-dark">
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Home", "Index", "Home")</a></li>,
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Chaves", "Index", "Chaves")</a></li>
        <li class="breadcrumb-item active" aria-current="page">Criar</li>
    </ol>
</nav>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Chave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <small class="form-text text-muted">
                    Chave é composta de uma única palavra com até 11 caracteres maiúsculos e sem acento. Exemplo: MUTANTE.
                </small>
                @Html.EditorFor(model => model.Chave, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Chave, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, "Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Tipo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.CheckBoxFor(model => model.GeraConta)
            @Html.ValidationMessageFor(model => model.GeraConta, "", new { @class = "form-check-input" })
            <label class="form-check-label" for="gridCheck">
                Gera conta
            </label>
        </div>

        <div class="form-group">
            @Html.CheckBoxFor(model => model.Inativo)
            @Html.ValidationMessageFor(model => model.Inativo, "", new { @class = "form-check-input" })
            <label class="form-check-label" for="gridCheck">
                Inativo
            </label>
        </div>

        <hr />

        <div class="form-group">
            <input type="submit" value="Salvar" class="btn btn-dark " />
            <button type="button" class="btn btn-secondary ">@Html.ActionLink("Cancelar", "Index")</button>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
