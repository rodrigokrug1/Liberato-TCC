@model ProjetoTCC.Prestacoes

@{
    /**/

    ViewBag.Title = "Gerar Prestações";
}

<h2>Gerar prestações</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb bg-dark">
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Home", "Index", "Home")</a></li>
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Prestações", "Index", "Prestacoes")</a></li>
        <li class="breadcrumb-item active" aria-current="page">Gerar prestações</li>
    </ol>
</nav>
<hr />
<small class="form-text text-muted">
    A rotina de Geração de Prestações permite gerar várias prestações para um ou vários membros de uma só vez.<br />
    Informações sobre vencimento e valor das prestações são definidas no menu <i>Definições / Parâmetros / Chaves</i>.
</small>
<hr />


@using (Html.BeginForm())
{
    <div class="row">
        <div class="col">
            <h4>Gerar prestações para:</h4>
            <small class="form-text text-muted">
                Defina o escopo da conta, chave e sequência devem ser informadas.
            </small>
            <br />
            <div>
                <div class="col">
                    Conta
                    <div class="col">
                        @Html.DropDownList("Conta", null, "Selecione", htmlAttributes: new { @class = "form-control col" })
                    </div>
                </div>
            </div>
            <br />
            <div>
                <div class="col">
                    Chave
                    <div class="col">
                        @Html.DropDownList("Chave", null, "Selecione", htmlAttributes: new { @class = "form-control col" })
                    </div>
                </div>
            </div>
            <br />
            <div class="col">
                Sequência
                <div class="row col">
                    <div class="col">
                        @Html.TextBox("PeriodoI", null, htmlAttributes: new { @class = "form-control", placeholder = "Inicial ex: 0000/00" })
                    </div>
                    até
                    <div class="col">
                        @Html.TextBox("PeriodoF", null, htmlAttributes: new { @class = "form-control", placeholder = "Final ex: 0000/00" })
                    </div>
                </div>
                <small class="form-text text-muted">
                    A sequência define o intervalo de meses em que as prestações serão geradas. <br />
                    Para gerar prestações para um único mês, informe igualmente as sequências inicial e final.
                </small>
            </div>
        </div>
        <br />
        <div class="col">
            <h4>Filtragem de membros:</h4>
            <small class="form-text text-muted">
                Defina o escopo dos membros para qual as prestações serão geradas.
            </small>
            <br />
            <div>
                <div class="col">
                    @Html.RadioButton("TipoFiltro", "PorMembro")
                    <label class="form-check-label">
                        Gerar para o seguinte membro:
                    </label>
                    <div class="col">
                        @Html.DropDownList("Matricula", null, "Selecione", htmlAttributes: new { @class = "form-control col" })
                    </div>
                </div>
                <br />
                <div class="col">
                    @Html.RadioButton("TipoFiltro", "PorFaccao")
                    <label class="form-check-label">
                        Gerar para os membros da seguinte facção:
                    </label>
                    <div class="col">
                        @Html.DropDownList("Faccao", null, "Selecione", htmlAttributes: new { @class = "form-control col" })
                    </div>
                </div>
                <br />
                <div class="col">
                    @Html.RadioButton("TipoFiltro", "Todos")
                    <label class="form-check-label">
                        Gerar para todos os membros
                    </label>
                    <small class="form-text text-muted">
                        Ao selecionar esta opção, as prestações serão geradas para todos os membros, de todas as facções.
                    </small>
                </div>

            </div>
        </div>
    </div>
    <hr />
    <div class="form-group">
        <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#confirmaGeracao">
            Gerar
        </button>
        <button type="button" class="btn btn-secondary ">@Html.ActionLink("Cancelar", "Index", "Prestacoes")</button>
    </div>

    <div class="modal fade" id="confirmaGeracao" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Geração de prestações</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Tem certeza que deseja iniciar a geração de prestações?
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Sim" class="btn btn-dark " />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Não</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#PeriodoI').mask('9999/99');
            $('#PeriodoF').mask('9999/99');
        });
    </script>

    <script>
        $("#Conta").change(function () {
            $.ajax({
                url: "/Prestacoes/BuscaChave",
                type: 'POST',
                dataType: "json",
                data: { Conta: $(this).val() },
                beforeSend: function () { $("#Chave").empty(); },
                error: function () { alert('A consulta falhou, tente novamente') },
                success: function (chave) {
                    for (let index in chave) {
                        let tipo = chave[index];
                        $("#Chave").append('<option value="' + tipo.Chave + '">' + tipo.Chave + '</option>');
                    };
                }
            });
        });
    </script>
}