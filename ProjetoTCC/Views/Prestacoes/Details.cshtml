@model ProjetoTCC.Prestacoes

@{
    ViewBag.Title = "Details";
}

<h2>Detalhes da prestação</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb bg-dark">
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Home", "Index", "Home")</a></li>,
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Prestação", "Index", "Prestacao")</a></li>
        <li class="breadcrumb-item active" aria-current="page">Detalhes</li>
    </ol>
</nav>

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-lg">
            @Html.LabelFor(model => model.Matricula, htmlAttributes: new { @class = "control-label col" })
            <div class="col">
                @Html.EditorFor(model => Model.Membros.Nome, new { htmlAttributes = new { @class = "form-control col-6 readonly", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.Nrprest, "Prestação nº", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-7">
                    @Html.EditorFor(Model => Model.Nrprest, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(model => model.DtVencimento, htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtVencimento, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.DtVencimento, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.Conta, "Conta", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.Conta, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Conta, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(model => model.DtPagamento, htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtPagamento, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.DtPagamento, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.Chave, "Chave", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.Chave, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Chave, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(model => model.Valor, "Valor", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.Sequencia, "Sequencia", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sequencia, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Sequencia, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(model => model.ValorCalculado, "Valor calculado", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ValorCalculado, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ValorCalculado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div>
        <div class="row">
            <div class="col">
                @Html.LabelFor(model => model.FormaPagamento, "FormaPagamento", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.FormaPagamento, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FormaPagamento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(model => model.Situacao, htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.Situacao, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Situacao, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col">
            @Html.LabelFor(model => model.Obs, htmlAttributes: new { @class = "control-label col" })
            <div class="col">
                @Html.EditorFor(model => model.Obs, new { htmlAttributes = new { @class = "form-control col-8 readonly", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col ">
            <div class="col align-content-lg-end">
                <br />
                <button type="button" class="btn btn-info -p" data-toggle="modal" data-target="#ExemploModalCentralizado">
                    ...
                </button>
            </div>
        </div>
    </div>
</div>

<hr />

<p>
    <button type="button" class="btn btn-dark">@Html.ActionLink("Editar", "Edit", new { Nrprest = Model.Nrprest })</button>
    <button type="button" class="btn btn-secondary ">@Html.ActionLink("Voltar", "Index") </button>
</p>

<!-- Modal -->
<div class="modal fade" id="ExemploModalCentralizado" tabindex="-1" role="dialog" aria-labelledby="TituloModalCentralizado" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="TituloModalCentralizado">Última alteração do registro</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Html.DisplayFor(model => model.Ass)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#Sequencia').mask('9999/99');
        });
    </script>
}