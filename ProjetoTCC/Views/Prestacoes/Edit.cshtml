@model ProjetoTCC.Prestacoes

@{
    ViewBag.Title = "Editar";
}

<h2>Editar prestação</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb bg-dark">
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Home", "Index", "Home")</a></li>,
        <li class="breadcrumb-item"><a href="#">@Html.ActionLink("Prestações", "Index", "Prestacoes")</a></li>
        <li class="breadcrumb-item active" aria-current="page">Editar</li>
    </ol>
</nav>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg">
                @Html.LabelFor(model => model.Matricula, "Matricula", htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.DropDownListFor(model => model.Matricula, null, htmlAttributes: new { @class = "form-control col-6 readonly", @readonly = "readonly", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Matricula, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Nrprest, "Prestação nº", htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-7">
                        @Html.EditorFor(Model => Model.Nrprest, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col">
                    @Html.LabelFor(model => model.DtVencimento, htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DtVencimento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DtVencimento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Conta, "Conta", htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(Model => Model.Conta, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Conta, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    @Html.LabelFor(model => model.DtPagamento, htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DtPagamento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DtPagamento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Chave, "Chave", htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(Model => Model.Chave, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Chave, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    @Html.LabelFor(model => model.Valor, "Valor", htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Sequencia, "Sequencia", htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Sequencia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sequencia, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    @Html.LabelFor(model => model.ValorCalculado, "Valor calculado", htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ValorCalculado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ValorCalculado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.FormaPagamento, htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(Model => Model.FormaPagamento, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FormaPagamento, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    @Html.LabelFor(model => model.Situacao, htmlAttributes: new { @class = "control-label col" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(Model => Model.Situacao, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Situacao, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg">
                @Html.LabelFor(model => model.Obs, htmlAttributes: new { @class = "control-label col" })
                <div class="col">
                    @Html.EditorFor(model => model.Obs, new { htmlAttributes = new { @class = "form-control col-10" } })
                    @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />

        <div class="form-group">
            <input type="submit" value="Salvar" class="btn btn-dark " />
            <button type="button" class="btn btn-secondary ">@Html.ActionLink("Cancelar", "Index")</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#Sequencia').mask('9999/99');
        });
    </script>
}
